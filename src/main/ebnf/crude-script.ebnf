crude-script ::= (statement1)*

statement1 ::= statement ";" | statement-block
statement-block ::= "{" statement1* "}"
statement ::= statement-for | statement-if | statement-let | statement-return | statement-while | expression
statement-for ::= "for" "(" expression? ";" expression? ";" expression? ")" statement1
statement-if ::= "if" "(" expression ")" statement1 "else" statement1
statement-let ::= "var" var "=" expression
statement-return ::= "return" expression
statement-while ::= "while" "(" expression ")" statement1

expression ::= expression-call
expression-call ::= expression-apply ("(" expression ")")*
expression-apply ::= expression-bool-and ("|" expression-bool-and)*
expression-bool-and ::= expression-bool-or ("||" expression-bool-and)?
expression-bool-or ::= expression-boot-not ("&&" expression-bool-or)?
expression-bool-not ::= "!"* expression-and
expression-and ::= expression-or ("|" expression-and)?
expression-or ::= expression-xor ("&" expression-or)?
expression-xor ::= expression-not ("^" expression-xor)?
expression-not ::= "~"*  expression-add
expression-add ::= expression-sub ("+" expression-add)?
expression-sub ::= "-" expression-mul | expression-mul ("-" expression-mul)*
expression-mul ::= expression-div ("*" expression-mul)?
expression-div ::= expression-mod ("/" expression-mod)*
expression-mod ::= expression-call ("%" expression-call)*
expression-lit ::= "(" expression ")" | <IDENTIFIER> "=>" (expression | statement-block) | "[" (expression ",")* "]" | "{" (<IDENTIFIER> ":" expression ",")* "}" | <INTEGER_LITERAL> | <STRING_LITERAL> | <IDENTIFIER>
