use external STANDARD ~
define mapaccuml := fun => v0 =>
	case
	|| `$i; $is` =>
		let `$v1, $o` := fun_{v0}_{i} ~
		let `$vx, $os` := mapaccuml_{fun}_{v1}_{is} ~
		vx, (o; os)
	|| anything => v0, ()
~
define mapaccumr := fun => v0 =>
	case
	|| `$i; $is` =>
		let `$v1, $os` := mapaccumr_{fun}_{v0}_{is} ~
		let `$vx, $o` := fun_{v1}_{i} ~
		vx, (o; os)
	|| anything => v0, ()
~
define foldl := fun => value => list =>
	mapaccuml_{v => e => fun_{v}_{e}, ()}_{value}_{list} | first
~
define foldr := fun => value => list =>
	mapaccumr_{v => e => fun_{e}_{v}, ()}_{value}_{list} | first
~
define mapl := fun => list =>
	mapaccuml_{v => e => v, fun_{e}}_{}_{list} | second
~
define mapr := fun => list =>
	mapaccumr_{v => e => v, fun_{e}}_{}_{list} | second
~
define unfoldl := fun => value => -- unfolds infinitely
	mapaccuml_{v => e => fun_{v}}_{value}_{} | second
~
define unfoldr := fun => value =>
	mapaccumr_{v => e => fun_{v}}_{value}_{} | second
~
