use external STANDARD >>
define mapaccuml := fun => v0 =>
	case
	|| `$i; $is` =>
		let `$v1, $o` := fun {v0} {i} >>
		let `$vx, $os` := mapaccuml {fun} {v1} {is} >>
		vx, (o; os)
	|| anything => v0, ()
>>
define mapaccumr := fun => v0 =>
	case
	|| `$i; $is` =>
		let `$v1, $os` := mapaccumr {fun} {v0} {is} >>
		let `$vx, $o` := fun {v1} {i} >>
		vx, (o; os)
	|| anything => v0, ()
>>
define foldl := fun => value => list =>
	mapaccuml {v => e => fun {v} {e}, ()} {value} {list} | first
>>
define foldr := fun => value => list =>
	mapaccumr {v => e => fun {e} {v}, ()} {value} {list} | first
>>
define mapl := fun => list =>
	mapaccuml {v => e => v, fun {e}} {} {list} | second
>>
define mapr := fun => list =>
	mapaccumr {v => e => v, fun {e}} {} {list} | second
>>
define unfoldl := fun => value => -- unfolds infinitely
	mapaccuml {v => e => fun {v}} {value} {} | second
>>
define unfoldr := fun => value =>
	mapaccumr {v => e => fun {v}} {value} {} | second
>>
