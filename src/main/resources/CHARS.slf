using external STANDARD >>
define cs-append := (data-of Chars -> data-of Chars -> data-of Chars) of
	atom:INTRN!CharsIntrinsics.append | getintrn | callintrn-v2
>>
define cs-from-string := (string -> data-of Chars) of
	atom:INTRN!CharsIntrinsics.stringChars | getintrn | callintrn-v1
>>
define cs-split := (data-of Chars -> number -> (data-of Chars, data-of Chars)) of
	atom:INTRN!CharsIntrinsics.split | getintrn | callintrn-v2
>>
define cs-subchars := (number -> number -> data-of Chars -> data-of Chars) of
	atom:INTRN!CharsIntrinsics.subchars | getintrn | callintrn-v3
>>
define cs-to-string := (data-of Chars -> string) of
	atom:INTRN!CharsIntrinsics.charsString | getintrn | callintrn-v1
>>
